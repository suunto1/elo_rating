<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
        href="https://fonts.googleapis.com/css2?family=Caprasimo&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
        rel="stylesheet" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/styles.css">
    <link rel="stylesheet" href="/styles_profile.css">
    <link rel="icon" href="/favicon.png" type="image/png" />
    <title>КМАМК Sim Racing</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.33/moment-timezone-with-data.min.js"></script>

    <script src='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/locale/uk.js'></script>
</head>

<body>
    <div id="global-pop-up-message" class="pop-up-message"></div>
    <%- include('partials/menu') %>

        <div class="main-content-wrapper">
            <aside class="sidebar-left"></aside>
            <main class="profile-main">
                <div class="profile-background-section">
                    <h2>Профiль</h2>
                    <div class="profile-card">
                        <div class="profile-header">
                            <div class="profile-avatar-container">
                                <img id="profile-avatar" src="<%= user.PhotoPath %>" alt="Аватар пилота">
                                <!-- <button id="upload-avatar-btn" class="upload-btn">Завантажити</button> -->
                                <input type="file" id="avatar-input" accept="image/*" style="display: none;">
                                <% const defaultAvatarPath='/avatars/default_avatar_64.png' ; %>
                                    <!-- <button id="delete-avatar-btn" class="delete-btn"
                                        style="display: none;">Видалити</button> -->
                            </div>
                            <div class="profile-title">
                                <div class="name-edit-container">
                                    <h3 id="fullNameDisplay" class="editable-name">
                                        <%= user.first_name %>
                                            <%= user.last_name %>
                                    </h3>
                                    <div id="nameEditFields" class="name-edit-fields" style="display: none;">
                                        <input type="text" id="firstNameInput" value="<%= user.first_name %>"
                                            pattern="[a-zA-Z]+" title="Лише латинські літери (A-Z, a-z)"
                                            placeholder="Ім'я">
                                        <input type="text" id="lastNameInput" value="<%= user.last_name %>"
                                            pattern="[a-zA-Z]+" title="Лише латинські літери (A-Z, a-z)"
                                            placeholder="Прізвище">
                                    </div>
                                    <button id="editNameBtn" class="edit-icon-btn" aria-label="Редагувати ім'я">
                                        <span class="edit-icon">✏️</span>
                                    </button>
                                </div>
                                <!-- <h2>
                                    <%= user.username %>
                                </h2> -->
                            </div>
                        </div>

                        <div class="profile-section">
                            <form id="profile-form">
                                <div class="form-group">
                                    <label for="iRacingCustomerId">iRacing Customer ID</label>
                                    <input type="text" id="iRacingCustomerId" name="iRacingCustomerId"
                                        value="<%= user.iRacingCustomerId || '' %>" pattern="[0-9]*"
                                        title="Повинно містити лише цифри">
                                </div>
                                <div class="form-group">
                                    <label for="LMUName">LMU Name</label>
                                    <input type="text" id="LMUName" name="LMUName" value="<%= user.LMUName || '' %>">
                                </div>
                                <div class="form-group">
                                    <label for="DiscordId">Discord ID</label>
                                    <input type="text" id="DiscordId" name="DiscordId"
                                        value="<%= user.DiscordId || '' %>">
                                </div>
                                <div class="form-group">
                                    <label for="YoutubeChannel">YouTube Channel URL</label>
                                    <input type="url" id="YoutubeChannel" name="YoutubeChannel"
                                        value="<%= user.YoutubeChannel || '' %>">
                                </div>
                                <div class="form-group">
                                    <label for="TwitchChannel">Twitch Channel URL</label>
                                    <input type="url" id="TwitchChannel" name="TwitchChannel"
                                        value="<%= user.TwitchChannel || '' %>">
                                </div>
                                <div class="form-group">
                                    <label for="Instagram">Instagram URL</label>
                                    <input type="url" id="Instagram" name="Instagram"
                                        value="<%= user.Instagram || '' %>">
                                </div>
                                <div class="form-group">
                                    <label for="Country">Країна</label>
                                    <input type="text" id="Country" name="Country" value="<%= user.Country || '' %>">
                                </div>
                                <div class="form-group">
                                    <label for="Twitter">Twitter URL</label>
                                    <input type="url" id="Twitter" name="Twitter" value="<%= user.Twitter || '' %>">
                                </div>
                                <div class="form-group">
                                    <label for="City">Мiсто / Село</label>
                                    <input type="text" id="City" name="City" value="<%= user.City || '' %>">
                                </div>
                                <div class="form-group">
                                    <label for="TeamUUID">Учасник команди</label>
                                    <select id="TeamUUID" name="TeamUUID">
                                        <option value="">-- Вибрати --</option>
                                        <% teams.forEach(function(team) { %>
                                            <option value="<%= team.UUID %>" <%=user.TeamUUID===team.UUID ? 'selected'
                                                : '' %>>
                                                <%= team.Name %>
                                            </option>
                                            <% }); %>
                                    </select>
                                </div>
                                <div class="form-group checkbox-group">
                                    <input type="checkbox" id="IsTeamInterested" name="IsTeamInterested"
                                        <%=user.IsTeamInterested ? 'checked' : '' %>
                                    <%= user.TeamUUID ? 'disabled' : '' %>> <label for="IsTeamInterested">Зацікавлений у
                                            створенні команди / Приєднанні
                                            до існуючої команди</label>
                                </div>
                                <button type="submit" class="save-btn">Зберегти</button>
                            </form>
                        </div>
                    </div>
                </div>
            </main>
            <aside class="sidebar-right"></aside>
        </div>

        <%- include('partials/footer') %>

            <script>
                document.addEventListener('DOMContentLoaded', () => {

                    const currentUserId = "<%= user.id %>";
                    const form = document.getElementById('profile-form');
                    const profileAvatar = document.getElementById('profile-avatar');
                    const uploadAvatarBtn = document.getElementById('upload-avatar-btn');
                    const avatarInput = document.getElementById('avatar-input');
                    const deleteAvatarBtn = document.getElementById('delete-avatar-btn');
                    const teamUUIDSelect = document.getElementById('TeamUUID');
                    const isTeamInterestedCheckbox = document.getElementById('IsTeamInterested');
                    const DEFAULT_AVATAR_PATH = '/avatars/default_avatar_64.png';

                    const globalPopUpMessageDiv = document.getElementById('global-pop-up-message');

                    const nameEditContainer = document.querySelector('.name-edit-container');
                    const fullNameDisplay = document.getElementById('fullNameDisplay');
                    const nameEditFields = document.getElementById('nameEditFields');
                    const firstNameInput = document.getElementById('firstNameInput');
                    const lastNameInput = document.getElementById('lastNameInput');
                    const editNameBtn = document.getElementById('editNameBtn');

                    if (!form) {
                        console.error('Ошибка: Форма с ID "profile-form" не найдена в DOM!');
                        return;
                    }

                    function showStatusMessage(message, type = 'success', duration = 3000) {
                        if (!globalPopUpMessageDiv) {
                            console.error('Ошибка: Элемент global-pop-up-message не найден в DOM!');
                            return;
                        }

                        globalPopUpMessageDiv.textContent = message;
                        globalPopUpMessageDiv.className = `pop-up-message ${type} show`;

                        setTimeout(() => {
                            globalPopUpMessageDiv.classList.remove('show');
                            setTimeout(() => {
                                globalPopUpMessageDiv.textContent = '';
                            }, 500);
                        }, duration);
                    }

                    // function updateDeleteButtonVisibility() {
                    // const isDefaultAvatar = profileAvatar.src.includes(DEFAULT_AVATAR_PATH);
                    // if (deleteAvatarBtn) {
                    //     if (isDefaultAvatar) {
                    //         deleteAvatarBtn.style.display = 'none';
                    //     } else {
                    //         deleteAvatarBtn.style.display = 'inline-block';
                    //     }
                    // } else {
                    //     console.error('Ошибка: Кнопка удаления аватара не найдена в DOM.');
                    // }
                    // }

                    // updateDeleteButtonVisibility();

                    function updateIsTeamInterestedState() {
                        if (teamUUIDSelect.value) {
                            isTeamInterestedCheckbox.checked = false;
                            isTeamInterestedCheckbox.disabled = true;
                        } else {
                            isTeamInterestedCheckbox.disabled = false;
                        }
                    }

                    updateIsTeamInterestedState();

                    teamUUIDSelect.addEventListener('change', updateIsTeamInterestedState);

                    let isEditingName = false;

                    editNameBtn.addEventListener('click', () => {
                        isEditingName = !isEditingName;
                        if (isEditingName) {
                            fullNameDisplay.style.display = 'none';
                            nameEditFields.style.display = 'flex';
                            firstNameInput.focus();
                        } else {
                            fullNameDisplay.textContent = `${firstNameInput.value.trim()} ${lastNameInput.value.trim()}`;
                            fullNameDisplay.style.display = 'block';
                            nameEditFields.style.display = 'none';
                        }
                    });

                    nameEditContainer.addEventListener('mouseenter', () => {
                        editNameBtn.style.display = 'inline-block';
                    });

                    nameEditContainer.addEventListener('mouseleave', () => {
                        if (!isEditingName) {
                            editNameBtn.style.display = 'none';
                        }
                    });

                    editNameBtn.style.display = 'none';

                    form.addEventListener('submit', async (e) => {
                        e.preventDefault();
                        console.log('Кнопка "Зберегти" нажата. Обработчик submit запущен.');

                        const iRacingCustomerIdInput = document.getElementById('iRacingCustomerId');
                        let clientErrorMessage = '';

                        if (iRacingCustomerIdInput.value && !/^[0-9]+$/.test(iRacingCustomerIdInput.value)) {
                            clientErrorMessage += 'Поле "iRacing Customer ID" повинно містити лише цифри\n';
                        }

                        const newFirstName = firstNameInput.value.trim();
                        const newLastName = lastNameInput.value.trim();

                        const latinRegex = /^[a-zA-Z]+$/;

                        if (nameEditFields.style.display === 'flex') {
                            if (!newFirstName) {
                                clientErrorMessage += 'Ім\'я не може бути пустим.\n';
                            } else if (!latinRegex.test(newFirstName)) {
                                clientErrorMessage += 'Ім\'я повинно містити лише латинські літери.\n';
                            }

                            if (!newLastName) {
                                clientErrorMessage += 'Прізвище не може бути пустим.\n';
                            } else if (!latinRegex.test(newLastName)) {
                                clientErrorMessage += 'Прізвище повинно містити лише латинські літери.\n';
                            }
                        }

                        if (clientErrorMessage) {
                            showStatusMessage(clientErrorMessage, 'error', 5000);
                            return;
                        }

                        const formData = {
                            first_name: newFirstName,
                            last_name: newLastName,
                            LMUName: document.getElementById('LMUName').value,
                            DiscordId: document.getElementById('DiscordId').value,
                            YoutubeChannel: document.getElementById('YoutubeChannel').value,
                            TwitchChannel: document.getElementById('TwitchChannel').value,
                            Instagram: document.getElementById('Instagram').value,
                            Twitter: document.getElementById('Twitter').value,
                            iRacingCustomerId: iRacingCustomerIdInput.value,
                            Country: document.getElementById('Country').value,
                            City: document.getElementById('City').value,
                            TeamUUID: teamUUIDSelect.value || '',
                            IsTeamInterested: isTeamInterestedCheckbox.checked
                        };

                        console.log('Отправляемые данные формы:', formData);

                        try {
                            const response = await fetch('https://elo-rating-1.onrender.com/profile/update', {
                                method: 'POST',
                                credentials: 'include',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(formData),
                            });

                            const data = await response.json();

                            if (response.ok) {
                                showStatusMessage(data.message, 'success');
                                fullNameDisplay.textContent = `${newFirstName} ${newLastName}`;
                                fullNameDisplay.style.display = 'block';
                                nameEditFields.style.display = 'none';
                                isEditingName = false;
                                editNameBtn.style.display = 'none';
                                if (data.updatedUser && data.updatedUser.username) {
                                    document.querySelector('.profile-title h2:last-of-type').textContent = data.updatedUser.username;
                                }
                            } else {
                                console.error('Ошибка от сервера при обновлении профиля:', data.message || response.statusText);
                                showStatusMessage('Помилка: ' + (data.message || 'Невiдома помилка'), 'error', 5000);
                            }
                        } catch (error) {
                            console.error('Помилка при оновленні профілю (сеть/Fetch API):', error);
                            showStatusMessage('Помилка при оновленні профілю.', 'error', 5000);
                        }
                    });

                    // uploadAvatarBtn.addEventListener('click', () => {
                    //     avatarInput.click();
                    // });

                    // avatarInput.addEventListener('change', async (event) => {
                    //     const file = event.target.files[0];
                    //     if (!file) return;

                    //     const formData = new FormData();
                    //     formData.append('photo', file);

                    //     console.log('Загрузка аватара: выбран файл', file.name);

                    //     try {
                    //         const response = await fetch(`https://elo-rating-1.onrender.com/profile/upload-photo`, {
                    //             method: 'POST',
                    //             body: formData,
                    //             credentials: 'include'
                    //         });
                    //         const data = await response.json();

                    //         if (response.ok) {
                    //             profileAvatar.src = data.photoPath;
                    //             showStatusMessage(data.message, 'success');
                    //             updateDeleteButtonVisibility();
                    //         } else {
                    //             console.error('Ошибка от сервера при загрузке фото:', data.message || response.statusText);
                    //             showStatusMessage('Помилка: ' + (data.message || 'Неизвестная ошибка при загрузке фото'), 'error', 5000);
                    //         }
                    //     } catch (error) {
                    //         console.error('Помилка завантаження фото (сеть/Fetch API):', error);
                    //         showStatusMessage('Помилка завантаження фото.', 'error', 5000);
                    //     }
                    // });

                    // document.addEventListener('click', async (event) => {
                    //     if (event.target.id === 'delete-avatar-btn') {
                    //         if (!confirm('Ви впевнені, що хочете видалити фото профілю?')) {
                    //             return;
                    //         }

                    //         console.log('Попытка удаления аватара.');

                    //         try {
                    //             const response = await fetch(`https://elo-rating-1.onrender.com/profile/delete-photo`, {
                    //                 method: 'DELETE',
                    //                 credentials: 'include'
                    //             });
                    //             const data = await response.json();
                    //             if (response.ok) {
                    //                 profileAvatar.src = data.photoPath;
                    //                 showStatusMessage(data.message, 'success');
                    //                 updateDeleteButtonVisibility();
                    //             } else {
                    //                 console.error('Ошибка от сервера при удалении фото:', data.message || response.statusText);
                    //                 showStatusMessage('Помилка: ' + (data.message || 'Неизвестная ошибка при удалении фото'), 'error', 5000);
                    //             }
                    //         } catch (error) {
                    //             console.error('Помилка при видаленні фото (сеть/Fetch API):', error);
                    //             showStatusMessage('Сталася помилка при видаленні фото. Проверьте подключение.', 'error', 5000);
                    //         }
                    //     }
                    // });
                });
            </script>
</body>

</html>