<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Caprasimo&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
    rel="stylesheet" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="/styles.css" />
  <link rel="stylesheet" href="/styles_pilots.css" />
  <link rel="icon" href="/favicon.png" type="image/png" />
  <title>КМАМК Sim Racing</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.31/moment-timezone-with-data.min.js"></script>
  <script src="/main.js"></script>
</head>

<body>
  <!-- Меню: сюда вставь статичный HTML меню или загрузи через JS -->
  <div id="menu-placeholder"></div>

  <div class="container">
    <aside class="sidebar-left"></aside>
    <main>
      <div class="header-container">
        <div class="search-container">
          <input type="text" id="search-input" placeholder="Пошук..." />
        </div>
      </div>
      <div class="content-container">
        <div class="table-container">
          <table>
            <thead>
              <tr>
                <th>No</th>
                <th>Name</th>
                <th>ELO Rating</th>
                <th>Races</th>
                <th>Avg.</th>
                <th>Streamer</th>
              </tr>
            </thead>
            <tbody id="pilots-tbody">
              <!-- Пилоты будут загружены через JS -->
            </tbody>
          </table>
        </div>
        <div id="chart-container">
          <div id="pilot-name"></div>
          <div class="chart-placeholder">
            Оберіть водія для відображення рейтингу
          </div>
          <canvas id="eloChart" style="display:none;"></canvas>
          <div id="pilot-details-info" style="display:none;">
            <div class="pilot-stats-grid">
              <div class="stat-card">
                <span class="stat-label">Стартів</span>
                <span class="stat-value" id="stats-starts">0</span>
              </div>
              <div class="stat-card">
                <span class="stat-label">Перемог</span>
                <span class="stat-value" id="stats-wins">0</span>
              </div>
              <div class="stat-card">
                <span class="stat-label">Подіумів (1-3)</span>
                <span class="stat-value" id="stats-podium">0</span>
              </div>
              <div class="stat-card">
                <span class="stat-label">Top 5</span>
                <span class="stat-value" id="stats-top5">0</span>
              </div>
              <div class="stat-card">
                <span class="stat-label">Top 10</span>
                <span class="stat-value" id="stats-top10">0</span>
              </div>
              <div class="stat-card">
                <span class="stat-label">% подіумів</span>
                <span class="stat-value" id="stats-podium-rate">0%</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Партнеры: сюда вставь статичный HTML партнеров или загрузи через JS -->
      <div id="partners-placeholder"></div>
    </main>
    <aside class="sidebar-right"></aside>
  </div>

  <script>
    // Загрузка меню и партнеров — если хочешь, подключи через fetch или вставь статически
    document.getElementById("menu-placeholder").innerHTML = `
      <!-- Вставь сюда содержимое меню, которое было в partials/menu.ejs -->
    `;
    document.getElementById("partners-placeholder").innerHTML = `
      <!-- Вставь сюда содержимое партнеров, которое было в partials/partners.ejs -->
    `;

    document.addEventListener("DOMContentLoaded", async function () {
      // Трекер просмотра страницы
      fetch("https://elo-rating-1.onrender.com/track-view", { method: "POST" }).catch(() => {});

      const searchInput = document.getElementById("search-input");
      const pilotsTbody = document.getElementById("pilots-tbody");
      const pilotNameDiv = document.getElementById("pilot-name");
      const ctx = document.getElementById("eloChart").getContext("2d");
      let eloChart;
      const chartPlaceholder = document.querySelector(".chart-placeholder");
      const pilotDetailsInfo = document.getElementById("pilot-details-info");

      // Загрузка списка пилотов с API
      async function loadPilots() {
        try {
          // Здесь можно сделать API-запрос за списком пилотов (например, /api/pilots)
          // Если у тебя нет отдельного API для списка — надо будет добавить на сервере.
          // Ниже пример запроса:
          const response = await fetch("https://elo-rating-1.onrender.com/api/pilots");
          if (!response.ok) throw new Error("Failed to fetch pilots");
          const data = await response.json();
          return data.pilots || [];
        } catch (err) {
          console.error("Error loading pilots:", err);
          return [];
        }
      }

      // Отрисовка таблицы пилотов
      function renderPilotsTable(pilots) {
        pilotsTbody.innerHTML = "";
        pilots.forEach((pilot, index) => {
          const tr = document.createElement("tr");
          tr.setAttribute("data-pilot", pilot.Name);

          tr.innerHTML = `
            <td>${index + 1}</td>
            <td class="pilot-name">${pilot.Name}</td>
            <td>${pilot.EloRanking}</td>
            <td>${pilot.RaceCount}</td>
            <td>${pilot.AverageChange.toFixed(2)}</td>
            <td class="streamer-icon-cell">
              ${
                pilot.YoutubeChannel || pilot.TwitchChannel
                  ? `<a href="${pilot.YoutubeChannel || pilot.TwitchChannel}" target="_blank" class="streamer-link" aria-label="Streamer Channel">
                      <img src="/images/headphones-100.png" alt="Streamer Icon" class="streamer-icon">
                    </a>`
                  : ""
              }
            </td>
          `;
          pilotsTbody.appendChild(tr);

          // Навешиваем клик
          tr.addEventListener("click", () => selectPilot(tr, pilot.Name));
        });
      }

      // Выбор пилота и загрузка данных
      async function selectPilot(row, pilotName) {
        // Снять выделение с других
        document.querySelectorAll("#pilots-tbody tr").forEach(r => r.classList.remove("selected"));
        row.classList.add("selected");

        pilotNameDiv.textContent = pilotName;
        chartPlaceholder.style.display = "none";
        document.getElementById("eloChart").style.display = "";
        pilotDetailsInfo.style.display = "block";

        try {
          const response = await fetch(`https://elo-rating-1.onrender.com/pilot/${encodeURIComponent(pilotName)}`);
          if (!response.ok) throw new Error("Network response was not ok");
          const data = await response.json();

          const eloChartData = data.eloChartData;
          const pilotStats = data.stats;

          document.getElementById("stats-starts").textContent = pilotStats.starts;
          document.getElementById("stats-wins").textContent = pilotStats.wins;
          document.getElementById("stats-podium").textContent = pilotStats.podiums;
          document.getElementById("stats-top5").textContent = pilotStats.top5;
          document.getElementById("stats-top10").textContent = pilotStats.top10;
          document.getElementById("stats-podium-rate").textContent = `${pilotStats.podiumRate}%`;

          const labels = [];
          const chartData = [];
          eloChartData.forEach(race => {
            const date = new Date(race.Date);
            labels.push(date.toLocaleDateString("en-CA"));
            chartData.push(race.CumulativeElo);
          });

          if (eloChart) eloChart.destroy();

          eloChart = new Chart(ctx, {
            type: "line",
            data: {
              labels,
              datasets: [
                {
                  label: "ELO Rating",
                  data: chartData,
                  borderColor: "red",
                  backgroundColor: "rgba(255, 0, 0, 0.2)",
                  borderWidth: 2,
                  fill: true,
                },
              ],
            },
            options: {
              maintainAspectRatio: false,
              responsive: true,
              interaction: {
                mode: "index",
                intersect: false,
              },
              plugins: {
                tooltip: {
                  mode: "index",
                  intersect: false,
                  callbacks: {
                    title: ctx => ctx[0].label,
                    label: ctx => `ELO: ${ctx.parsed.y}`,
                  },
                },
              },
              scales: {
                x: {
                  type: "time",
                  time: {
                    unit: "day",
                    tooltipFormat: "dd.MM.yyyy",
                  },
                  title: {
                    display: true,
                    text: "Date",
                  },
                  grid: {
                    color: "rgba(255, 255, 255, 0.1)",
                  },
                  ticks: {
                    color: "rgb(235, 235, 235)",
                  },
                },
                y: {
                  title: {
                    display: true,
                    text: "Rating",
                  },
                  beginAtZero: false,
                  grid: {
                    color: "rgba(255, 255, 255, 0.1)",
                  },
                  ticks: {
                    color: "rgb(235, 235, 235)",
                  },
                },
              },
            },
          });
        } catch (error) {
          console.error("Error fetching race data:", error);
          chartPlaceholder.style.display = "flex";
          pilotDetailsInfo.style.display = "none";
          document.getElementById("eloChart").style.display = "none";
          ["starts", "wins", "podium", "top5", "top10", "podium-rate"].forEach(id => {
            document.getElementById(`stats-${id}`).textContent = id === "podium-rate" ? "0%" : "0";
          });
        }
      }

      // Фильтрация по поиску
      function filterPilots() {
        const searchText = searchInput.value.toLowerCase();
        document.querySelectorAll("#pilots-tbody tr").forEach(row => {
          const pilotName = row.getAttribute("data-pilot").toLowerCase();
          row.style.display = pilotName.includes(searchText) ? "" : "none";
        });
      }

      searchInput.addEventListener("input", filterPilots);

      // Загрузка и отображение пилотов
      const pilots = await loadPilots();
      renderPilotsTable(pilots);

      // По умолчанию показываем заглушку на графике
      chartPlaceholder.style.display = "flex";
      pilotDetailsInfo.style.display = "none";
    });

    // Установка активного пункта меню (если надо)
    var currentUrl = window.location.pathname;
    function setActiveMenuItem() {
      var menuItems = document.querySelectorAll(".menu a");
      menuItems.forEach(function (item) {
        if (item.getAttribute("href") === currentUrl) {
          item.classList.add("active");
        }
      });
    }
    window.onload = setActiveMenuItem;
  </script>

  <!-- Футер: вставь статичный HTML или загрузку -->
  <div id="footer-placeholder"></div>
  <script>
    document.getElementById("footer-placeholder").innerHTML = `
      <!-- Вставь сюда содержимое partials/footer.ejs -->
    `;
  </script>
</body>

</html>
